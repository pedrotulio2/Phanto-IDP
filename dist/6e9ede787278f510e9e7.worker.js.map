{"version":3,"sources":["webpack:///webpack/bootstrap 6e9ede787278f510e9e7","webpack:///./src/lib/worker/Worker.js","webpack:///./src/lib/Search.js","webpack:///./src/lib/SearchIndex.js"],"names":[],"mappings":"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","file":"6e9ede787278f510e9e7.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6e9ede787278f510e9e7\n **/","/**\n * Search entry point to web worker.\n * Builds search index and performs searches on separate thread from the ui.\n * @flow\n */\nimport Search from '../Search'\n\nconst search = new Search()\n\nself.addEventListener('message', event => {\n  const { data } = event\n  const { method } = data\n\n  switch (method) {\n    case 'indexDocument':\n      const { uid, text } = data\n\n      search.indexDocument(uid, text)\n      break\n    case 'search':\n      const { callbackId, query } = data\n\n      const results = search.search(query)\n\n      self.postMessage({ callbackId, results })\n      break\n  }\n}, false)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/worker/Worker.js\n **/","/** @flow */\nimport SearchIndex from './SearchIndex'\n\n/**\n * Client side, full text search utility.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class Search {\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.searchIndex = new SearchIndex()\n    this.uids = {}\n  }\n\n  /**\n   * Adds or updates a uid in the search index and associates it with the specified text.\n   * Note that at this time uids can only be added or updated in the index, not removed.\n   *\n   * @param uid Uniquely identifies a searchable object\n   * @param text Text to associate with uid\n   */\n  indexDocument (uid: any, text: string): Search {\n    this.uids[uid] = true\n\n    var fieldTokens: Array<string> = this._tokenize(this._sanitize(text))\n\n    fieldTokens.forEach(fieldToken => {\n      var expandedTokens: Array<string> = this._expandToken(fieldToken)\n\n      expandedTokens.forEach(expandedToken =>\n        this.searchIndex.indexDocument(expandedToken, uid)\n      )\n    })\n\n    return this\n  }\n\n  /**\n   * Searches the current index for the specified query text.\n   * Only uids matching all of the words within the text will be accepted.\n   * If an empty query string is provided all indexed uids will be returned.\n   *\n   * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n   * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n   *\n   * @param query Searchable query text\n   * @return Array of uids\n   */\n  search (query: string): Array<any> {\n    if (!query) {\n      return Object.keys(this.uids)\n    } else {\n      var tokens: Array<string> = this._tokenize(this._sanitize(query))\n\n      return this.searchIndex.search(tokens)\n    }\n  }\n\n  /**\n   * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n   *\n   * @private\n   */\n  _expandToken (token: string): Array<string> {\n    var expandedTokens = []\n\n    for (let i = 0, length = token.length; i < length; ++i) {\n      let prefixString: string = ''\n\n      for (let j = i; j < length; ++j) {\n        prefixString += token.charAt(j)\n        expandedTokens.push(prefixString)\n      }\n    }\n\n    return expandedTokens\n  }\n\n  /**\n   * @private\n   */\n  _sanitize (string: string): string {\n    return string.trim().toLocaleLowerCase()\n  }\n\n  /**\n   * @private\n   */\n  _tokenize (text: string): Array<string> {\n    return text\n      .split(/\\s+/)\n      .filter(text => text) // Remove empty tokens\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/Search.js\n **/","/** @flow */\n\n/**\n * Maps search tokens to uids.\n * This structure is used by the Search class to optimize search operations.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchIndex {\n  tokenToUidMap: { [token: string]: any }\n\n  constructor () {\n    this.tokenToUidMap = {}\n  }\n\n  /**\n   * Maps the specified token to a uid.\n   *\n   * @param token Searchable token (e.g. \"road\")\n   * @param uid Identifies a document within the searchable corpus\n   */\n  indexDocument (token: string, uid: any): void {\n    if (!this.tokenToUidMap[token]) {\n      this.tokenToUidMap[token] = {}\n    }\n\n    this.tokenToUidMap[token][uid] = uid\n  }\n\n  /**\n   * Finds uids that have been mapped to the set of tokens specified.\n   * Only uids that have been mapped to all tokens will be returned.\n   *\n   * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n   * @return Array of uids that have been associated with the set of search tokens\n   */\n  search (tokens: Array<string>): Array<any> {\n    let uidMap: {[uid: any]: any} = {}\n    let initialized = false\n\n    tokens.forEach(token => {\n      let currentUidMap: {[uid: any]: any} = this.tokenToUidMap[token] || {}\n\n      if (!initialized) {\n        initialized = true\n\n        for (let uid in currentUidMap) {\n          uidMap[uid] = currentUidMap[uid]\n        }\n      } else {\n        for (let uid in uidMap) {\n          if (!currentUidMap[uid]) {\n            delete uidMap[uid]\n          }\n        }\n      }\n    })\n\n    let uids: Array<any> = []\n\n    for (let uid in uidMap) {\n      uids.push(uidMap[uid])\n    }\n\n    return uids\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/SearchIndex.js\n **/"],"sourceRoot":""}